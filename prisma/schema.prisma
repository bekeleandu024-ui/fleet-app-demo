datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  id             String    @id @default(cuid())
  customer       String
  origin         String
  destination    String
  puWindowStart  DateTime?
  puWindowEnd    DateTime?
  delWindowStart DateTime?
  delWindowEnd   DateTime?
  requiredTruck  String?
  notes          String?
  createdAt      DateTime  @default(now())

  // inverse relation so Trip.order works
  trips Trip[]
}

model Trip {
  id String @id @default(cuid())

  // relation to Order (keep)
  orderId String?
  order   Order?  @relation(fields: [orderId], references: [id])

  // existing text fields (keep)
  driver String
  unit   String

  // timing (keep)
  tripStart DateTime?
  tripEnd   DateTime?
  weekStart DateTime?

  // classification
  type String?
  zone String?

  // numbers (SQLite: keep plain Decimal, no @db.Decimal)
  miles      Decimal
  revenue    Decimal?
  fixedCPM   Decimal?
  wageCPM    Decimal?
  addOnsCPM  Decimal?
  rollingCPM Decimal?

  totalCPM  Decimal?
  totalCost Decimal?
  profit    Decimal?
  marginPct Decimal? // 0..1

  // status/timestamps (keep)
  status    String   @default("Created")
  createdAt DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  // NEW optional FKs to lookup tables
  driverId String?
  unitId   String?
  rateId   String?

  // NEW relations to lookup tables
  driverRef Driver? @relation("TripDriver", fields: [driverId], references: [id])
  unitRef   Unit?   @relation("TripUnit", fields: [unitId], references: [id])
  rateRef   Rate?   @relation("TripRate", fields: [rateId], references: [id])

  // events (keep)
  events Event[]
}

model Event {
  id        String   @id @default(cuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  type      String // TripStarted, ArrivedPU, LeftPU, CrossedBorder, ArrivedDEL, FinishedDEL
  at        DateTime // timestamp
  location  String?
  notes     String?
  createdAt DateTime @default(now())
}

// NEW lookup tables
model Driver {
  id       String  @id @default(cuid())
  name     String  @unique
  license  String?
  homeBase String?
  active   Boolean @default(true)
  // back-ref
  trips    Trip[]  @relation("TripDriver")
}

model Unit {
  id       String  @id @default(cuid())
  code     String  @unique // e.g. "COM-012"
  name     String
  type     String? // Tractor/Box/etc.
  homeBase String?
  active   Boolean @default(true)
  // back-ref
  trips    Trip[]  @relation("TripUnit")
}

model Rate {
  id         String  @id @default(cuid())
  type       String? // Company, OwnerOp, External
  zone       String? // Ontario, Midwest, GTA, US-East
  fixedCPM   Decimal
  wageCPM    Decimal
  addOnsCPM  Decimal
  rollingCPM Decimal
  // back-ref (optional to use later)
  trips      Trip[]  @relation("TripRate")

  @@index([type])
  @@index([zone])
}

model RateSetting {
  id        String   @id @default(cuid())
  rateKey   String
  category  String
  value     Decimal
  unit      String
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([rateKey, category])
  @@index([category])
}
